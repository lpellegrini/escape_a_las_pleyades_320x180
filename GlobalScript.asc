//-------------------------------------------------------------------------------
// Legal Disclaimer: Verb-Coin-GUI Graphics for Adventure Game Studio 3.0
//-------------------------------------------------------------------------------
//
// All graphics are created by Misj' in CorelDraw X3. These images 
// are not in public domain, but may be used for GUI-templates for 
// AGS (as well as AGS games using that GUI). The images may not be 
// altered without permission of the author (with the exception of 
// file type conversions, and alterations to the empty inventory 
// sprite to create additional inventory items).
//
// If you have created a GUI using these graphics, and you would 
// like to acknowledged me, do so at the location of distribution, 
// or in a text-file accompanying the GUI (or not at all ;) ).
//
// These graphics were created as a gift to the AGS community, and 
// Chris Jones - creator of the Adventure Game Studio - in particular.
//
// Have fun adventuring,
//
// Misj'
// 23.10.2007
//
//-----------------------------------------------------------------------------
//
// AGS Website: http://www.adventuregamestudio.co.uk/
// Verb-Coin-GUI for AGS 3.0 forum location: http://new.bigbluecup.com/yabb/index.php?topic=32745.0
//
//-------------------------------------------------------------------------------

// main global script file

int item_count = 10;  //how many inventory items fit in your inventory screen? *!*
bool discos_name = false;
bool talk_cesar = false;
bool pua_quest = false;
bool have_casco = false;
int discos = 0;

function game_start() 
{ // called when the game starts, before the first room is loaded
  SCUMM_VERBCOIN_GUI.Item_Count(10);  //how many inventory items fit in your inventory screen? *!*
  SCUMM_VERBCOIN_GUI.Inv_Border_active(true, true); //inventory exit borders 
  SCUMM_VERBCOIN_GUI.Inv_Border_SetPos(20, 220, 20, 295);  //x- and y-coördinates of the exit borders 
  SCUMM_VERBCOIN_GUI.verbgraphic(bIdle, 1);
  SCUMM_VERBCOIN_GUI.verbgraphic(bTalk, 2);
  SCUMM_VERBCOIN_GUI.verbgraphic(bLook, 3);
  SCUMM_VERBCOIN_GUI.verbgraphic(bInteract, 4);
  SCUMM_VERBCOIN_GUI.verbgraphic(bCustom1, 0);
  SCUMM_VERBCOIN_GUI.verbgraphic(bCustom2, 0);
  SCUMM_VERBCOIN_GUI.verbgraphic(bCustom3, 0);
  SCUMM_VERBCOIN_GUI.Inventory_GUI(gInventory.ID, gInvUnderlay.ID);
  SCUMM_VERBCOIN_GUI.Verbcoin_GUI(gVerbCoin.ID);
  SCUMM_VERBCOIN_GUI.DoubleClickSpeed(GetGameSpeed()/4);
  SCUMM_VERBCOIN_GUI.UseDefaultAction(true);
  SCUMM_VERBCOIN_GUI.SetDefaultAction(aLook, "Mirar ");
  SCUMM_VERBCOIN_GUI.SetDefaultAction(aInteract, "Usar ");
  SCUMM_VERBCOIN_GUI.SetDefaultAction(aTalk, "Hablar con ");
}

function on_key_press(int keycode) {
  
  /* the GetASCIINumber retrieves the ASCII keycode, just select the key you want from the dropdown list */
  
  // Standard AGS
  
  if (keycode==GetASCIINumber(CtrlQ))  gGui1.Visible = true;   
  if (keycode==GetASCIINumber(F5)) SaveGameDialog();   
  if (keycode==GetASCIINumber(F7)) RestoreGameDialog();
  if (keycode==GetASCIINumber(F9)) RestartGame();  
  if (keycode==GetASCIINumber(F12)) SaveScreenShot("scrnshot.bmp");  
  
  // Debugging
  
  if (keycode==GetASCIINumber(CtrlS))  Debug(0,0);  // give all inventory
  if (keycode==GetASCIINumber(CtrlV))  Debug(1,0);  // version
  if (keycode==GetASCIINumber(CtrlA))  Debug(2,0);  // show walkable areas
  if (keycode==GetASCIINumber(CtrlX))  Debug(3,0);  // teleport to room
  
  // The SCUMM Verbcoin GUI action responses (same result as clicking the 6 buttons on the verbcoin GUI)
  
  if (keycode==GetASCIINumber(l) || keycode==GetASCIINumber(L)) SCUMM_VERBCOIN_GUI.RunInteraction(eModeLookat);
  if (keycode==GetASCIINumber(u) || keycode==GetASCIINumber(U)) SCUMM_VERBCOIN_GUI.RunInteraction(eModeInteract);
  if (keycode==GetASCIINumber(t) || keycode==GetASCIINumber(T)) SCUMM_VERBCOIN_GUI.RunInteraction(eModeTalkto);
  if (keycode==GetASCIINumber(a) || keycode==GetASCIINumber(A)) SCUMM_VERBCOIN_GUI.RunInteraction(eModeUsermode1);
  if (keycode==GetASCIINumber(b) || keycode==GetASCIINumber(B)) SCUMM_VERBCOIN_GUI.RunInteraction(eModeUsermode2);
  if (keycode==GetASCIINumber(c) || keycode==GetASCIINumber(C)) SCUMM_VERBCOIN_GUI.RunInteraction(eModePickup);
  
  // Move the cursor. Increase the value to speed up the mouse.
  
  if (keycode==GetASCIINumber(LeftArrowKey)) mouse.SetPosition(mouse.x - 5, mouse.y);
  if (keycode==GetASCIINumber(RightArrowKey)) mouse.SetPosition(mouse.x + 5, mouse.y);
  if (keycode==GetASCIINumber(UpArrowKey)) mouse.SetPosition(mouse.x, mouse.y - 5);
  if (keycode==GetASCIINumber(DownArrowKey)) mouse.SetPosition(mouse.x, mouse.y + 5);
  
  // Select item, Use an item on another item/hotspot/...
  
  if (keycode==GetASCIINumber(Space)) SCUMM_VERBCOIN_GUI.Select();
  
  // Deselect active item, quit inventory
  
  if (keycode==GetASCIINumber(Enter))  SCUMM_VERBCOIN_GUI.Deselect();
      
  // Open/close inventory   
  
  if (keycode==GetASCIINumber(Tab)) SCUMM_VERBCOIN_GUI.GoInventory();
  
  // Scroll the inventory using the keyboard
  
  if (keycode==GetASCIINumber(PgUpAndNumbericPadNine)) SCUMM_VERBCOIN_GUI.InvScroll_Left();
  if (keycode==GetASCIINumber(PgDnAndNumbericPadThree)) SCUMM_VERBCOIN_GUI.InvScroll_Right();
}

// Scroll the inventory using the buttons

function btnright_OnClick(GUIControl *control, MouseButton button)
{
  SCUMM_VERBCOIN_GUI.InvScroll_Right();
}

function btnleft_OnClick(GUIControl *control, MouseButton button)
{
  SCUMM_VERBCOIN_GUI.InvScroll_Left();
  
}

//-------------------------------------------------------------------
//	Inventory item events
//-------------------------------------------------------------------
function dialog_request(int param) {
  if (param == 1)  {
    cRati.Animate(8,  5, eOnce,  eBlock);
    cRati.ChangeView(10);
    cRati.FaceCharacter(cEgo);
    }
  if (param == 2)
  {
  
  cFanAlien.SayBackground("Medias Alien, Medias Alien!");
  cFanAlien.Animate(4, 7, eOnce, eBlock);
  
  cFanAlien.ChangeView(14);
  }
  if (param == 3)
  {
  cRati.FaceCharacter(cCamionero);  
  }
  if (param == 4)
  {
  cEgo.FaceDirection(eDirectionDown);
  cEgo.Say("¡Esa dirección!");
  cEgo.FaceCharacter(cRati);
  }
  if (param == 5)
  {
    discos_name = true;
    if (talk_cesar)
    {
      cEgo.Say("Si querés, puedo entregarle los discos yo, lo conozco a César.");
      cCamionero.Say("¿Te parece?");
      dCamioConv.SetOptionState(6, eOptionOn);
      dCamioConv.SetOptionState(7, eOptionOn);
      dCamioConv.SetOptionState(8, eOptionOn);
      dCamioConv.SetOptionState(5, eOptionOff);
      dCamioConv.SetOptionState(4, eOptionOff);
      dCamioConv.SetOptionState(3, eOptionOff);
      dCamioConv.SetOptionState(2, eOptionOff);
    }
  }
  if (param == 6)
  {
    if (discos_name)
    {
    dCesarConv.SetOptionState(9, eOptionOn);
    dCesarConv.SetOptionState(10, eOptionOn);
    dCesarConv.SetOptionState(11, eOptionOn);
    }
  }
  if (param == 7)
  {
    talk_cesar = true;
    if (discos == 3)
    {
      dCesarConv.SetOptionState(12, eOptionOffForever);
    }
  }
  if (param == 8)
  {
    cEgo.Walk(1700,  1016, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionLeft);
    Wait(10);
    object[1].Visible = true;
    Wait(30);
    cEgo.Say("Hay una púa para tocadiscos, tal vez me sea útil, no creo que el camionero se enoje si la llevo");
    Wait(10);
    object[1].Visible = false;
    cEgo.Say("Ya tengo los discos y la púa");
    cEgo.AddInventory(pua);
    cEgo.AddInventory(mussolini);
    cEgo.AddInventory(nazi);
    cEgo.AddInventory(comunista);
  }
  if (param == 9)
  {
    if (cEgo.HasInventory(comunista))
    {
      cEgo.Say("Lo tengo acá");
      cEgo.LoseInventory(comunista);
      Wait(20);
      cChar1.Say ("Gracias!");
      dCesarConv.SetOptionState(14,  true);
      dCesarConv.SetOptionState(9, eOptionOffForever);
      discos += 1;
    }
  }
  if (param == 10)
  {
    if (cEgo.HasInventory(nazi))
    {
      cEgo.Say("Lo tengo acá");
      cEgo.LoseInventory(nazi);
      Wait(20);
      cChar1.Say ("Gracias!");
      dCesarConv.SetOptionState(15,  true);
      dCesarConv.SetOptionState(10, eOptionOffForever);
      discos += 1;
    }
  }
  if (param == 11)
  {
    if (cEgo.HasInventory(mussolini))
    {
      cEgo.Say("Lo tengo acá");
      cEgo.LoseInventory(mussolini);
      Wait(20);
      cChar1.Say ("Gracias!");
      dCesarConv.SetOptionState(11, eOptionOffForever);
      dCesarConv.SetOptionState(16,  true);
      discos += 1;
    }
  }
  if (param == 12)
  {
    if (pua_quest)
    {
      cChar1.Say ("Sus deseos son ordenes");
      cChar1.Walk (711, 511, eBlock);
      Wait (10);
      Display("[[Ese rojo no te quiere [No es sincero como yo [Yo te traigo el dinero [Él solo una revolución [No te va a traer flores [Ni chocolates, ni amor [El solo quiere darte... [Sexo libre y subversión [[No te cases con un comunista [No se afeita y lee a Marx [No te cases con un comunista [Tu propia empresa no tendrás jamarx[[" );
      cEgo.Say("Esa canción es realmente pegadiza, la letra se me quedó grabada en la cabeza");
      cEgo.Say("Gracias!");
      StopDialog();
    }
    else
    {
      cChar1.Say("La púa del tocadiscos está rota");
    }
  }
}







//-------------------------------------------------------------------
//	Character events
//-------------------------------------------------------------------

function cEgo_Interact()
{
}

function cEgo_Look()
{

}

function cEgo_Talk()
{

}

function cEgo_AnyClick()
{
}



function WalkToChar(Character* CharName)
{
  bool fromleft;
  if (cEgo.x <= CharName.x)
  {
    fromleft = true;
  }
  else
  fromleft = false;
  
  if (fromleft)
  {
    cEgo.Walk (CharName.x -20,  CharName.y, eBlock);
    
  } 
  else
  {
    cEgo.Walk (CharName.x +20,  CharName.y, eBlock);
  } 
  cEgo.FaceCharacter(CharName);
  CharName.FaceCharacter(cEgo);
}

function cRati_Talk()
{
WalkToChar(cRati);


RatiConv.Start();
}

function cRati_AnyClick()
{
WalkToChar(cRati);
cEgo.FaceCharacter(cRati);
}

function cFanAlien_Talk()
{
WalkToChar(cFanAlien);
dHippieConv.Start();
}

function cRati_Look()
{
cEgo.Say("Un policía no muy confiable");
}

function cCamionero_Talk()
{
WalkToChar(cCamionero);
dCamioConv.Start();
}

function cChar1_Talk()
{
WalkToChar (cChar1);
dCesarConv.Start();
}

function cCasco_Interact()
{

}

function cCasco_Talk()
{
WalkToChar (cCasco);

}

function cChar1_UseInv()
{
  if (cEgo.ActiveInventory == pua)
  {
    cEgo.LoseInventory(pua);
    pua_quest = true;
  cChar1.Say("Gracias! la púa de mi tocadiscos está rota, ahora puedo reemplazarla");
  }
}


function Button1_OnClick(GUIControl *control, MouseButton button)
{
gGui1.Visible = false;
}

function Button2_OnClick(GUIControl *control, MouseButton button)
{
QuitGame(0);
}
